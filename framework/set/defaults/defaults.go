package defaults

const (
	Data         = "data"
	Description  = "description"
	Resource     = "resource"
	ResourceKind = "kind"
	ResourceName = "name"
	Namespace    = "namespace"
	Triggers     = "triggers"
	Value        = "value"

	DependsOn    = "depends_on"
	GenerateName = "generate_name"
	Defaults     = "defaults"
	Index        = "index"
	File         = "file"
	Airgap       = "airgap"
	Custom       = "custom"
	Import       = "import"

	Rancher2Source      = "rancher/rancher2"
	Rancher2LocalSource = "terraform.local/local/rancher2"

	DefaultPodSecurityAdmission = "default_pod_security_admission_configuration_template_name"
	PodSecurityAdmission        = "rancher2_pod_security_admission_configuration_template"
	CloudCredential             = "rancher2_cloud_credential"
	Cluster                     = "rancher2_cluster"
	ClusterV2                   = "rancher2_cluster_v2"
	SecretV2                    = "rancher2_secret_v2"

	AgentEnvVars                        = "agent_env_vars"
	RkeConfig                           = "rke_config"
	KubernetesVersion                   = "kubernetes_version"
	Network                             = "network"
	Plugin                              = "plugin"
	RKE1PrivateRegistries               = "private_registries"
	PrivateRegistries                   = "registries"
	EngineInsecureRegistry              = "engine_insecure_registry"
	Config                              = "config"
	Configs                             = "configs"
	Mirrors                             = "mirrors"
	Services                            = "services"
	EnableNetworkPolicy                 = "enable_network_policy"
	DefaultClusterRoleForProjectMembers = "default_cluster_role_for_project_members"
	RancherBaseline                     = "rancher-baseline"

	AccessKey         = "access_key"
	SecretKey         = "secret_key"
	CloudCredentialID = "cloud_credential_id"

	MachineConfig         = "machine_config"
	MachineGlobalConfig   = "machine_global_config"
	MachineSelectorConfig = "machine_selector_config"
	MachinePools          = "machine_pools"
	NodePool              = "node-pool"
	Etcd                  = "etcd"
	Enabled               = "enabled"
	RancherClusterID      = "cluster_id"
	Quantity              = "quantity"
	ChartValues           = "chart_values"

	Endpoint = "endpoint"
	Folder   = "folder"
	Region   = "region"
	Token    = "token"

	LogFile = "log_file"

	Tags = "tags"
	Type = "type"

	Ami                      = "ami"
	AssociatePublicIPAddress = "associate_public_ip_address"
	Count                    = "count"
	InstanceType             = "instance_type"
	SubnetId                 = "subnet_id"
	VpcId                    = "vpc_id"
	VpcSecurityGroupIds      = "vpc_security_group_ids"
	KeyName                  = "key_name"
	AwsInstance              = "aws_instance"
	Name                     = "Name"
	LowerCaseName            = "name"
	Nodes                    = "nodes"
	RootBlockDevice          = "root_block_device"
	VolumeSize               = "volume_size"
	Timeout                  = "timeout"

	LinodeInstance     = "linode_instance"
	LinodeImage        = "image"
	LinodeRegion       = "region"
	LinodeType         = "label"
	LinodeRootPassword = "root_pass"
	LinodeTags         = "tags"
	LinodeSwapSize     = "swap_size"
	LinodePrivateIP    = "private_ip"
	Harvester          = "harvester"
	CPU                = "cpu"
	Memory             = "memory"

	Labels = "labels"

	Disk                    = "disk"
	EFI                     = "efi"
	SecureBoot              = "secure_boot"
	RunStrategy             = "run_strategy"
	Hostname                = "hostname"
	HarvesterSource         = "harvester/harvester"
	SshUser                 = "ssh-user"
	KubernetesSecret        = "kubernetes_secret"
	HarvesterVirtualMachine = "harvester_virtualmachine"
	HarvesterSSHKey         = "harvester_ssh_key"
	RerunOnFailure          = "RerunOnFailure"
	PublicKey               = "public_key"

	NetworkName      = "network_name"
	NetworkInterface = "network_interface"
	NIC1             = "nic-1"
	Model            = "model"
	WaitForLease     = "wait_for_lease"
	Virtio           = "virtio"
	Bridge           = "bridge"

	RestartAfterUpdate = "restart_after_update"
	RootDisk           = "rootdisk"

	Size        = "size"
	BootOrder   = "boot_order"
	Image       = "image"
	AutoDelete  = "auto_delete"
	Bus         = "bus"
	Q35         = "q35"
	MachineType = "machine_type"
	Ubuntu      = "ubuntu"
	Gi          = "Gi"

	ModulePath       = "module_path"
	ModuleRelPath    = "module_rel_path"
	CodebaseRootPath = "codebase_root_path"

	CloudInit          = "cloudinit"
	UserDataSecretName = "user_data_secret_name"
	NetworkData        = "network_data"

	Locals                          = "locals"
	RoleFlags                       = "role_flags"
	AllFlags                        = "--etcd --controlplane --worker"
	EtcdRoleFlag                    = "--etcd"
	ControlPlaneRoleFlag            = "--controlplane"
	WorkerRoleFlag                  = "--worker"
	OriginalNodeCommand             = "original_node_command"
	WindowsOriginalNodeCommand      = "windows_original_node_command"
	WindowsProxyOriginalNodeCommand = "windows_proxy_original_node_command"
	InsecureCommand                 = "insecure_command"
	InsecureNodeCommand             = "insecure_node_command"
	InsecureWindowsNodeCommand      = "insecure_windows_node_command"
	InsecureWindowsProxyNodeCommand = "insecure_windows_proxy_node_command"
	ClusterRegistrationToken        = "cluster_registration_token"
	NodeCommand                     = "node_command"
	WindowsNodeCommand              = "windows_node_command"

	ConfigPath       = "config_path"
	Connection       = "connection"
	Host             = "host"
	Inline           = "inline"
	TargetPlatform   = "target_platform"
	NullResource     = "null_resource"
	TimeSleep        = "time_sleep"
	CreateDuration   = "create_duration"
	RegisterNodes    = "register_nodes"
	PrivateKey       = "private_key"
	Provisioner      = "provisioner"
	RemoteExec       = "remote-exec"
	Ssh              = "ssh"
	WinRM            = "winrm"
	UseNTLM          = "use_ntlm"
	User             = "user"
	Password         = "password"
	UserData         = "user_data"
	Self             = "self"
	Windows          = "windows"
	PublicIp         = "public_ip"
	PrivateIp        = "private_ip"
	IPAddress        = "ip_address"
	PrivateIPAddress = "private_ip_address"
	Length           = "length"

	Aws    = "aws"
	Linode = "linode"

	AwsSource    = "hashicorp/aws"
	LinodeSource = "linode/linode"
	RKESource    = "rancher/rke"

	ApiUrl      = "api_url"
	Destination = "destination"
	Helm        = "helm"
	Local       = "local"
	Kubernetes  = "kubernetes"

	KubernetesSource  = "hashicorp/kubernetes"
	Insecure          = "insecure"
	LocalSource       = "hashicorp/local"
	Provider          = "provider"
	Rancher2          = "rancher2"
	Rc                = "-rc"
	RKE               = "rke"
	RKECluster        = "rke_cluster"
	RequiredProviders = "required_providers"
	Source            = "source"
	Terraform         = "terraform"
	TokenKey          = "token_key"
	Version           = "version"

	DefaultAction = "default_action"
	HealthCheck   = "health_check"

	InternalLoadBalancer = "aws_internal_lb"
	LoadBalancer         = "aws_lb"

	LoadBalancerARN               = "load_balancer_arn"
	LoadBalancerInternalListerner = "aws_internal_lb_listener"
	LoadBalancerListener          = "aws_lb_listener"

	LoadBalancerType        = "load_balancer_type"
	LoadBalancerTargetGroup = "aws_lb_target_group"

	LoadBalancerInternalTargetGroupAttachment = "aws_internal_lb_target_group_attachment"
	LoadBalancerTargetGroupAttachment         = "aws_lb_target_group_attachment"

	Port                  = "port"
	Route53InternalRecord = "aws_internal_route53_record"
	Route53Record         = "aws_route53_record"
	Route53Zone           = "aws_route53_zone"
	Subnets               = "subnets"

	InternalTargetGroup80Attachment   = "aws_internal_tg_attachment_80_server"
	InternalTargetGroup443Attachment  = "aws_internal_tg_attachment_443_server"
	InternalTargetGroup6443Attachment = "aws_internal_tg_attachment_6443_server"
	InternalTargetGroup9345Attachment = "aws_internal_tg_attachment_9345_server"
	TargetGroup80Attachment           = "aws_tg_attachment_80_server"
	TargetGroup443Attachment          = "aws_tg_attachment_443_server"
	TargetGroup6443Attachment         = "aws_tg_attachment_6443_server"
	TargetGroup9345Attachment         = "aws_tg_attachment_9345_server"

	TargetGroupARN            = "target_group_arn"
	TargetGroupInternalPrefix = "aws_internal_tg_"
	TargetGroupPrefix         = "aws_tg_"
	TargetID                  = "target_id"

	LinodeNodeBalancer       = "linode_nodebalancer"
	LinodeNodeBalancerConfig = "linode_nodebalancer_config"
	LinodeNodeBalancerNode   = "linode_nodebalancer_node"
	LinodeDomain             = "linode_domain"
	LinodeDomainRecord       = "linode_domain_record"
)
